name: Android-Windows

on:
  push:
    branches:
      - master
      - "Stable*"
      - detached
      - detached_squashed
      - fork_detached_squashed
    tags:
      - "v*"
    paths-ignore:
      - "deploy/**"
      - "docs/**"
  pull_request:
    paths-ignore:
      - "deploy/**"
      - "docs/**"
      - ".github/workflows/docs_deploy.yml"
      - ".github/workflows/linux.yml"
      - ".github/workflows/macos.yml"
      - ".github/workflows/windows.yml"

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        BuildType: [Debug]

    defaults:
      run:
        shell: cmd

    env:
      ARTIFACT: QGroundControl.apk
      QT_VERSION: 6.6.3
      GST_VERSION: 1.22.12
      QT_ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/deploy/android/android_release.keystore
      QT_ANDROID_KEYSTORE_ALIAS: QGCAndroidKeyStore
      QT_ANDROID_KEYSTORE_STORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      QT_ANDROID_KEYSTORE_KEY_PASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      QT_ANDROID_ABIS: "arm64-v8a"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true
          fetch-depth: 0

      - uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Install Dependencies
        run: |
          choco install --no-progress ninja pkgconfiglite -y
          choco install --no-progress cmake --installargs 'ADD_CMAKE_TO_PATH=System' --apply-install-arguments-to-dependencies

      - name: Install Qt for Android
        uses: ./.github/actions/qt-android
        with:
          host: windows
          arch: win64_msvc2019_64
          version: ${{ env.QT_VERSION }}
          abis: ${{ env.QT_ANDROID_ABIS }}

      - name: Set up Visual Studio shell
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - run: mkdir ${{ runner.temp }}\shadow_build_dir

      - name: Where Where
        run: |
          where cmake
          where qmake
          where qt-configure-module
          dir D:\a\_temp\Qt

      - name: Setup QMQTT for Android
        run: |
          set QT_INSTALL_DIR=D:/a/_temp/Qt
          set QT_VERSION=6.6.3
          set ANDROID_ABI=arm64-v8a
          git clone git://code.qt.io/qt/qtmqtt.git --branch 6.6.3
          cd qtmqtt
          mkdir build
          cd build/

          rem Use cmake to configure QMQTT for Android
          cmake -DCMAKE_TOOLCHAIN_FILE=%QT_INSTALL_DIR%/%QT_VERSION%/android_arm64_v8a/android.toolchain.cmake -DANDROID_ABI=%ANDROID_ABI% -DQt6Mqtt_DIR=%QT_INSTALL_DIR%/%QT_VERSION%/lib/cmake/Qt6Mqtt ..

          rem Build QMQTT
          cmake --build . --config Debug

      - name: Configure QGroundControl
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: |
          cmake -S ${{ github.workspace }} -B . -G Ninja ^
          -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} ^
          -DQT_ANDROID_ABIS="${{ env.QT_ANDROID_ABIS }}" ^
          -DQT_ANDROID_BUILD_ALL_ABIS=OFF ^
          -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../msvc2019_64" ^
          -DQT_ANDROID_SIGN_APK=OFF ^
          -DQT_DEBUG_FIND_PACKAGE=ON ^
          -DQt6Mqtt_DIR="${{ runner.temp }}/qtmqtt/build" ^ 
          --debug-find-pkg=Qt6Mqtt

      - name: Check Files installed
        run: dir D:\a\_temp\Qt\6.6.3\msvc2019_64\bin\

      - name: Build QGroundControl
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Save APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/android-build/*.apk
